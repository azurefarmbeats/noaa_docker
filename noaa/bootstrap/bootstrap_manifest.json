{
    "add_extended_measure_types":[
        "Elevation",
        "WindAngle",
        "SeaLvlPressure",
        "PresentWeatherIndicator",
        "PastWeatherIndicator",
        "PrecipTime",
        "PrecipDepth",
        "SnowDepth",
        "CloudCover",
        "Precipitation",
        "WindSpeed"
    ],
    "add_extended_measure_units":[
        "Hectopascals",
        "Hours",
        "kg.m-2",
        "Pascal",
        "Metre",
        "Kelvin",
        "m/s"
    ],
    "add_data_models":[
        {
            "name": "noaa_isd",
            "description": "NOAA integrated surface database - weather data",
            "weatherMeasures": [
              {
                "name": "Elevation",
                "dataType": "Double",
                "type": "Elevation",
                "unit": "NoUnit",
                "description": "The elevation of a GEOPHYSICAL-POINT-OBSERVATION relative to Mean Sea Level (MSL)."
              },
              {
                "name": "WindAngle",
                "dataType": "Double",
                "type": "WindAngle",
                "unit": "Degree",
                "description": "The angle, measured in a clockwise direction, between true north and the direction from which the wind is blowing. MIN: 001 MAX: 360 UNITS: Angular Degrees"
              },
              {
                "name": "Temperature",
                "dataType": "Double",
                "type": "AmbientTemperature",
                "unit": "Celsius",
                "description": "The temperature of the air. MIN: -0932 MAX: +0618 UNITS: Degrees Celsius"
              },
              {
                "name": "SeaLvlPressure",
                "dataType": "Double",
                "type": "SeaLvlPressure",
                "unit": "Hectopascals",
                "description": "The air pressure relative to Mean Sea Level (MSL). MIN: 08600 MAX: 10900 UNITS: Hectopascals"
              },
              {
                "name": "PrecipTime",
                "dataType": "Double",
                "type": "PrecipTime",
                "unit": "Hours",
                "description": "The quantity of time over which the LIQUID-PRECIPITATION was measured. Units: Hours. MIN: 00; MAX: 98; 99 = Missing."
              },
              {
                "name": "PrecipDepth",
                "dataType": "Double",
                "type": "PrecipDepth",
                "unit": "MilliMeter",
                "description": "The depth of LIQUID-PRECIPITATION that is measured at the time of an observation. Units: millimeters. MIN: 0000; MAX: 9998; 9999 = Missing."
              },
              {
                "name": "SnowDepth",
                "dataType": "Double",
                "type": "SnowDepth",
                "unit": "CentiMeter",
                "description": "The depth of snow and ice on the ground. MIN: 0000 MAX: 1200 UNITS: centimeters"
              }
            ],
            "properties": {
            }
          },
          {
          "name": "noaa_gfs",
          "description": "NOAA Global Forecast System - forecasted weather data",
          "weatherMeasures": [
            {
              "name": "precipitableWaterEntireAtmosphere",
              "dataType": "Double",
              "type": "Precipitation",
              "unit": "kg.m-2",
              "description": "Precipitable water at entire atmosphere layer."
            },
            {
              "name": "seaLvlPressure",
              "dataType": "Double",
              "type": "SeaLvlPressure",
              "unit": "Pascal",
              "description": "Pressure at ground or water surface."
            },
            {
              "name": "snowDepthSurface",
              "dataType": "Double",
              "type": "SnowDepth",
              "unit": "Metre",
              "description": "Snow depth at ground or water surface. Units: m"
            },
            {
              "name": "temperature",
              "dataType": "Double",
              "type": "AmbientTemperature",
              "unit": "Kelvin",
              "description": "Temperature at ground or water surface. Units: K"
            },
            {
              "name": "totalCloudCoverConvectiveCloud",
              "dataType": "Double",
              "type": "CloudCover",
              "unit": "NoUnit",
              "description": "Total cloud cover at convective cloud layer. Units: %"
            },
            {
              "name": "windSpeedGustSurface",
              "dataType": "Double",
              "type": "WindSpeed",
              "unit": "m/s",
              "description": "Wind speed (gust) at ground or water surface. Units: m/s"
            }
          ],
          "properties": {
          }
        }
    ],
    "add_job_types":[
        {
            "name": "get_weather_data",
            "description": "Get weather data (NOAA ISD) - Azure open datasets",
            "isPartnerJobType": true,
            "pipelineDetails": {
              "parameters": [
                {
                  "name": "latitude",
                  "type": "Float",
                  "isRequired": true,
                  "description": "Latitude for the point for which we want to fetch weather data"
                },
                {
                    "name": "longitude",
                    "type": "Float",
                    "isRequired": true,
                    "description": "Longitude for the point for which we want to fetch weather data"
                },
                {
                    "name": "from",
                    "type": "String",
                    "isRequired": true,
                    "description": "Date from which (inclusive) weather data will be downloaded for the farm. Format is YYYY-MM-DD. Example: 2019-09-28"
                },
                {
                    "name": "to",
                    "type": "String",
                    "isRequired": true,
                    "description": "Date to which (inclusive) weather data will be downloaded for the farm. Format is YYYY-MM-DD. Example: 2019-09-28"
                },
                {
                    "name": "farm_id",
                    "type": "String",
                    "isRequired": false,
                    "description": "System generated unique Farm Id. Please refer to Farm APIs for more information."
                }
              ]
            },
            "properties":{
              "programRunCommand": "python3 noaa/jobs/get_weather_data.py"
            }
        },
        {
        "name": "get_weather_forecast_data",
            "description": "Get weather forecast data (NOAA GFS) - Azure open datasets",
            "isPartnerJobType": true,
            "pipelineDetails": {
              "parameters": [
                {
                  "name": "latitude",
                  "type": "Float",
                  "isRequired": true,
                  "description": "Latitude for the point for which we want to fetch weather data"
                },
                {
                    "name": "longitude",
                    "type": "Float",
                    "isRequired": true,
                    "description": "Longitude for the point for which we want to fetch weather data"
                },
                {
                    "name": "from",
                    "type": "String",
                    "isRequired": true,
                    "description": "Date from which (inclusive) weather data will be downloaded for the farm. Format is YYYY-MM-DD. Example: 2019-09-28"
                },
                {
                    "name": "to",
                    "type": "String",
                    "isRequired": true,
                    "description": "Date to which (inclusive) weather data will be downloaded for the farm. Format is YYYY-MM-DD. Example: 2019-09-28"
                },
                {
                    "name": "farm_id",
                    "type": "String",
                    "isRequired": false,
                    "description": "System generated unique Farm Id. Please refer to Farm APIs for more information."
                }
              ]
            },
            "properties":{
              "programRunCommand": "python3 noaa/jobs/get_forecast_data.py"
            }
        }
    ]
}